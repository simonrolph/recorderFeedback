[{"path":"https://simonrolph.github.io/recorderFeedback/articles/1_getting_data.html","id":"getting-data","dir":"Articles","previous_headings":"","what":"Getting Data","title":"Getting Data","text":"vignette explains recorderFeedback loads recipient observation data, can configure extend steps workflow.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/1_getting_data.html","id":"configuration","dir":"Articles","previous_headings":"Getting Data","what":"Configuration","title":"Getting Data","text":"data sources defined project’s configuration file, config.yml, copied project initialisation. relevant entries : recipients_file: Path recipients data (e.g., \"data/recipients.csv\"). recipients_script: Script loading recipients (e.g., \"scripts/get_recipients.R\"). data_file: Path records/observations data (e.g., \"data/data.csv\"). data_script: Script loading records (e.g., \"scripts/get_data.R\"). can customise paths scripts suit data sources.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/1_getting_data.html","id":"loading-recipients","dir":"Articles","previous_headings":"Getting Data","what":"Loading Recipients","title":"Getting Data","text":"function rf_get_recipients() loads recipient data using script specified recipients_script. default, script reads file defined recipients_file.","code":"config <- config::get() rf_get_recipients() recipients <- read.csv(config$recipients_file) knitr::kable(head(recipients))"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/1_getting_data.html","id":"loading-records","dir":"Articles","previous_headings":"Getting Data","what":"Loading Records","title":"Getting Data","text":"Similarly, rf_get_data() loads observation data using script specified data_script, reading file defined data_file.","code":"rf_get_data() records <- read.csv(config$data_file) knitr::kable(head(records))"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/2_generating_content.html","id":"generating-content","dir":"Articles","previous_headings":"","what":"Generating Content","title":"Generating Content","text":"vignette describes recorderFeedback generates personalised feedback content, including computations integrated workflow.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/2_generating_content.html","id":"configuration","dir":"Articles","previous_headings":"Generating Content","what":"Configuration","title":"Generating Content","text":"Content generation controlled project’s configuration file, config.yml. Key entries include: computation_script_focal: Script computations focal (recipient-specific) data. computation_script_bg: Script background computations. content_template_file: RMarkdown template rendering feedback. html_template_file: HTML template styling output. default, computation scripts point \"scripts/computation.R\", can specify different scripts needed.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/2_generating_content.html","id":"computations","dir":"Articles","previous_headings":"Generating Content","what":"Computations","title":"Generating Content","text":"content generation pipeline, can run custom computations data. scripts (referenced computation_script_focal computation_script_bg) allow summarise, analyse, transform data required. can customise computation scripts suit analysis needs. example, might calculate summary statistics, generate plots, prepare tables inclusion feedback.","code":"# Run computations for focal and background data rf_do_computations()"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/2_generating_content.html","id":"rendering-content","dir":"Articles","previous_headings":"Generating Content","what":"Rendering Content","title":"Generating Content","text":"Content generated using template specified content_template_file (RMarkdown file). function rf_render_single() creates feedback specific recipient, rf_generate() processes batch. batch processing:","code":"# Render feedback for a single recipient rf_render_single(recipient_id = 1) batch_id <- \"example_batch\" rf_render_all(batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/2_generating_content.html","id":"customising-templates","dir":"Articles","previous_headings":"Generating Content","what":"Customising Templates","title":"Generating Content","text":"RMarkdown template (templates/content.Rmd): Defines structure appearance feedback document. can edit include custom text, tables, plots, computed results. HTML template (templates/template.html): Controls look feel final output.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/2_generating_content.html","id":"viewing-and-verifying-output","dir":"Articles","previous_headings":"Generating Content","what":"Viewing and Verifying Output","title":"Generating Content","text":"generation, can view verify content:","code":"rf_view_content(batch_id = batch_id, recipient_id = 1) rf_verify_batch(batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/3_distributing_content.html","id":"distributing-content","dir":"Articles","previous_headings":"","what":"Distributing Content","title":"Distributing Content","text":"vignette describes recorderFeedback distributes generated feedback recipients.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/3_distributing_content.html","id":"configuration","dir":"Articles","previous_headings":"Distributing Content","what":"Configuration","title":"Distributing Content","text":"Distribution settings managed project’s config.yml file. Key entries include: mail_server: SMTP server address. mail_port: SMTP port (default: 587). mail_use_tls / mail_use_ssl: Security options email. mail_username, mail_password: Credentials authentication. mail_sender, mail_name: Sender details. mail_subject: Subject line feedback emails. mail_test_recipient: Address test emails.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/3_distributing_content.html","id":"dispatching-feedback","dir":"Articles","previous_headings":"Distributing Content","what":"Dispatching Feedback","title":"Distributing Content","text":"generating feedback content, use rf_dispatch_smtp() send emails recipients. function uses configuration connect mail server distribute feedback. can test email setup sending address specified mail_test_recipient distributing recipients.","code":"batch_id <- \"example_batch\" rf_dispatch_smtp(batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/3_distributing_content.html","id":"customising-email-content","dir":"Articles","previous_headings":"Distributing Content","what":"Customising Email Content","title":"Distributing Content","text":"Email formatting controlled template specified content_template_file html_template_file rf_config.yml. Email body attachments generated recipient using templates.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/3_distributing_content.html","id":"verifying-distribution","dir":"Articles","previous_headings":"Distributing Content","what":"Verifying Distribution","title":"Distributing Content","text":"dispatch, can verify emails sent check errors:","code":"rf_verify_batch(batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/3_distributing_content.html","id":"summary","dir":"Articles","previous_headings":"Distributing Content","what":"Summary","title":"Distributing Content","text":"Email distribution fully configurable via rf_config.yml. Use rf_dispatch_smtp() send feedback recipients. Test verify setup full distribution. approach ensures feedback reaches recipients efficiently ","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Example: iNaturalist Summary","text":"vignette demonstrates use recorderFeedback fetch iNaturalist data recipients, summarize personalized reports, distribute results via email. walks full pipeline: setup, data collection, template creation, rendering, distribution.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Example: iNaturalist Summary","text":"Initialize project directory load configuration: creates working structure loads configuration settings defined config.yml.","code":"rf_init(\"inaturalist_example\") config <- config::get()"},{"path":[]},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"defining-recipients","dir":"Articles","previous_headings":"Getting data","what":"Defining recipients","title":"Example: iNaturalist Summary","text":"Recipients individuals feedback reports generated. example, manually define script. File: scripts/get_recipients.R Run recipient script: Inspect recipients file:","code":"# A script for getting recipients config <- config::get() df <- data.frame(   email = c(\"simon@example.com\"),   name = c(\"Simon\"),   recipient_id = c(\"1152941\") # iNaturalist user ID ) write.csv(df, config$recipients_file, row.names = FALSE) rf_get_recipients() read.csv(config$recipients_file)"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"collecting-inaturalist-records","dir":"Articles","previous_headings":"Getting data","what":"Collecting iNaturalist records","title":"Example: iNaturalist Summary","text":"now pull iNaturalist observations recipient last 30 days. File: scripts/get_data.R Fetch verify data:","code":"library(httr) library(jsonlite)  get_inat_observations <- function(user_id) {   today <- Sys.Date()   start_date <- today - 30      base_url <- \"https://api.inaturalist.org/v1/observations\"   query <- list(     user_id = user_id,     d1 = start_date,     d2 = today,     per_page = 30,     order = \"desc\",     order_by = \"created_at\"   )      response <- GET(base_url, query = query)   stop_for_status(response)      data <- content(response, as = \"text\", encoding = \"UTF-8\")   obs <- fromJSON(data, flatten = TRUE)      output <- obs$results %>%     select(record_id = id,            recipient_id = user.id,            date = observed_on,            common_name = taxon.preferred_common_name,            scientific_name = taxon.name,            species_group = taxon.iconic_taxon_name)      return(output) }  recipients <- read.csv(config$recipients_file) observations <- data.frame() for (i in 1:nrow(recipients)) {   observations <- bind_rows(observations,                             get_inat_observations(recipients$recipient_id[i])) }  write.csv(observations, config$data_file, row.names = FALSE) rf_get_data() rf_verify_data(verbose = TRUE)"},{"path":[]},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"creating-a-template","dir":"Articles","previous_headings":"Generating content","what":"Creating a template","title":"Example: iNaturalist Summary","text":"build simple R Markdown template generates personalized summary recipient. template includes: Greeting recipient name Count unique species recorded table recent observations (rendered print() function putting R markdown R markdown apparently hard without getting confused.)","code":"#> --- #>  title: \"iNaturalist Summary\" #>  params: #>    recipient_name: \"\" #>    recipient_email: \"UNKNOWN\" #>    focal_data: \"\" #>    bg_data: \"\" #>    focal_computed_objects: \"\" #>    bg_computed_objects: \"\" #>    content_key: \"\" #>    config: \"\" #>    extra_params: \"\" #>  footer-date-time: \"`r format(Sys.time(), '%Y-%m-%d %H:%M:%S %Z')`\" #>  recipient-email: \"`r params$recipient_email`\" #>  --- #>   #>  ```{r setup, include=FALSE} #>  knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, #>                        fig.align = 'center', error = FALSE, results = 'asis') #>  library(dplyr) #>  ``` #>   #>  # Hello `r params$recipient_name`! #>   #>  You have recorded `r length(unique(params$focal_data$scientific_name))` species recently! #>   #>  ```{r table} #>  knitr::kable( #>    params$focal_data %>% #>      select(\"Date\" = date, #>             \"Group\" = species_group, #>             \"Species\" = scientific_name, #>             \"Common name\" = common_name) #>  ) #>  ``` #>   #>  Best wishes,   #>  recorderFeedback"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"rendering","dir":"Articles","previous_headings":"Generating content","what":"Rendering","title":"Example: iNaturalist Summary","text":"Render single report testing: Render recipients:","code":"rf_render_single(recipient_id = \"1152941\") batch_id <- \"vignette_demo\" rf_render_all(batch_id = batch_id) rf_verify_batch(batch_id, verbose = TRUE)"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"distribution","dir":"Articles","previous_headings":"","what":"Distribution","title":"Example: iNaturalist Summary","text":"Finally, send reports email using configured SMTP settings:","code":"rf_dispatch_smtp(batch_id = batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/articles/example_1_inaturalist_summary.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Example: iNaturalist Summary","text":"vignette showed : Define recipients. Fetch iNaturalist records via API. Build personalised R Markdown report. Render reports individually batch. Distribute via email. recorderFeedback package provides structured workflow automating ecological feedback loops iNaturalist activity summaries.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Rolph. Author, maintainer.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rolph S (2025). recorderFeedback: Generating personalised, data-driven feedback. R package version 0.2.0, https://simonrolph.github.io/recorderFeedback/.","code":"@Manual{,   title = {recorderFeedback: Generating personalised, data-driven feedback},   author = {Simon Rolph},   year = {2025},   note = {R package version 0.2.0},   url = {https://simonrolph.github.io/recorderFeedback/}, }"},{"path":"https://simonrolph.github.io/recorderFeedback/index.html","id":"recorderfeedback","dir":"","previous_headings":"","what":"Generating personalised, data-driven feedback","title":"Generating personalised, data-driven feedback","text":"recorderFeedback R package generating personalised, data-driven feedback, originally designed citizen science wildlife recording adaptable domains. package provides tools set feedback workflow, load data, generate content, distribute feedback recipients.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Generating personalised, data-driven feedback","text":"Project Initialisation: Quickly scaffold new feedback project necessary files folders. Data Loading: Import recipient observation data configurable sources. Computation: Run custom analyses summaries data generating feedback. Content Rendering: Create personalised feedback documents recipient using RMarkdown templates. Batch Processing: Automate feedback generation multiple recipients. Email Dispatch: Send feedback via email using SMTP. Package functions prefixed rf_.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generating personalised, data-driven feedback","text":"Install GitHub using devtools:","code":"devtools::install_github(\"simonrolph/recorderFeedback\")"},{"path":"https://simonrolph.github.io/recorderFeedback/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Generating personalised, data-driven feedback","text":"initialise project rf_init(), files copied set workflow, ensuring necessary templates, scripts, configuration get started quickly. config.yml: central configuration file referenced README, set paths options project. scripts/computation.R, scripts/get_data.R, scripts/get_recipients.R: Scripts loading data, recipients, running computations, matching workflow steps outlined README. templates/content.Rmd, templates/email_format.R, templates/template.html: Templates rendering feedback formatting emails run_pipeline.R, _targets.R: Pipeline orchestration scripts, supporting batch processing automation diagram attempts explain fits together: Key terms: Recipient: someone receive feedback Focal/background: whether data relates recipient (focal), (background) Template: RMarkdown document defining data manipulated visualised Computations: calculations processing done raw data prior rendering template","code":"graph TD     A[Data source] --> |\"rf_get_recipients()<br>config$recipients_script\" | B[\"Recipient data (.csv)\"<br>config$recipient_file]     C[Data source] --> |\"rf_get_data()<br>config$data_script\" | D[\"Records data(.csv)\"<br>config$data_file]     F[\"Templates<br>config$content_template_file<br>config$html_template_file\"] --> E     H[\"Computation scripts<br>config$computation_script_focal<br>config$computation_script_background\"] --> E     B --> E(\"{Targets} pipeline<br>_targets.R\")     D --> E     E --> |\"rf_generate()\"| G[Batch content and meta data<br>.html files]     G --> |\"rf_dispatch_smtp()\"| J[Feedback received by recipients] library(recorderFeedback)  #initialise a new project rf_init(path = \"example\") ## Created folder: example/data  ##   Added .gitignore to: example/data  ## Created folder: example/templates  ## Created folder: example/renders  ## Created folder: example/scripts  ## Created folder: example/scripts/extras  ##   Added .gitignore to: example/scripts/extras  ## Working directory set to: C:/Users/simrol/OneDrive - UKCEH/R_onedrive/R_2025/recorderFeedback/example config <- config::get()  #get recipients rf_get_recipients() ## [1] \"Recipient file has been updated\" knitr::kable(head(read.csv(config$recipients_file))) #get data rf_get_data() ## [1] \"Data file has been updated\" knitr::kable(head(read.csv(config$data_file))) #verify the data is all good rf_verify_data(T) ## Number of data records: 20  ## Number of recipients: 5  ## Data and recipients verification complete: no blocking errors found. #render a single feedback item rf_render_single(recipient_id = 1) ## [1] \"renders/singles/content_1_2025-08-20.html\" # run the pipeline batch_id <- \"test_batch\" rf_render_all(batch_id) ## + template_file dispatched ## ✔ template_file completed [450ms, 1.20 kB] ## + html_template_file dispatched ## ✔ html_template_file completed [0ms, 2.28 kB] ## + recipients_target dispatched ## ✔ recipients_target completed [0ms, 213 B] ## + raw_data_file dispatched ## ✔ raw_data_file completed [0ms, 1.39 kB] ## + computation_file dispatched ## ✔ computation_file completed [0ms, 1.17 kB] ## + computation_file_focal dispatched ## ✔ computation_file_focal completed [0ms, 1.17 kB] ## + raw_data dispatched ## ✔ raw_data completed [0ms, 605 B] ## + bg_computed_objects dispatched ## ✔ bg_computed_objects completed [0ms, 78 B] ## + recipient_objects_1 dispatched ## ✔ recipient_objects_1 completed [0ms, 392 B] ## + recipient_objects_2 dispatched ## ✔ recipient_objects_2 completed [0ms, 424 B] ## + recipient_objects_3 dispatched ## ✔ recipient_objects_3 completed [20ms, 417 B] ## + recipient_objects_4 dispatched ## ✔ recipient_objects_4 completed [0ms, 413 B] ## + recipient_objects_5 dispatched ## ✔ recipient_objects_5 completed [0ms, 415 B] ## + data_story_content_1 dispatched ## ✔ data_story_content_1 completed [1.8s, 3.46 kB] ## + data_story_content_2 dispatched ## ✔ data_story_content_2 completed [1.2s, 3.60 kB] ## + data_story_content_3 dispatched ## ✔ data_story_content_3 completed [1.2s, 3.60 kB] ## + data_story_content_4 dispatched ## ✔ data_story_content_4 completed [1.2s, 3.60 kB] ## + data_story_content_5 dispatched ## ✔ data_story_content_5 completed [1.2s, 3.59 kB] ## + meta_data_1 dispatched ## ✔ meta_data_1 completed [0ms, 172 B] ## + meta_data_2 dispatched ## ✔ meta_data_2 completed [0ms, 175 B] ## + meta_data_3 dispatched ## ✔ meta_data_3 completed [0ms, 172 B] ## + meta_data_4 dispatched ## ✔ meta_data_4 completed [0ms, 174 B] ## + meta_data_5 dispatched ## ✔ meta_data_5 completed [0ms, 174 B] ## + meta_table dispatched ## ✔ meta_table completed [20ms, 653 B] ## ✔ ended pipeline [9.2s, 24 completed, 0 skipped] ## Warning messages: ## 1: package 'targets' was built under R version 4.5.1  ## 2: package 'tarchetypes' was built under R version 4.5.1  ## 3: package 'assertr' was built under R version 4.5.1  ## 4: package 'lubridate' was built under R version 4.5.1  ## 5: 1 targets produced warnings. Run targets::tar_meta(fields = warnings, complete_only = TRUE) for the messages. #view the meta table meta_table <- read.csv(file.path(\"renders\",batch_id,\"/meta_table.csv\")) knitr::kable(head(meta_table)) #verify the batch rf_verify_batch(batch_id) ## Batch verification complete: no blocking errors found. #view content #rf_view_content(batch_id = batch_id,recipient_id = 3)  #send the emails #rf_dispatch_smtp(batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/index.html","id":"handling-errors","dir":"","previous_headings":"","what":"Handling errors","title":"Generating personalised, data-driven feedback","text":"rendering template fails pipeline continue, won’t .html file designated renders/[batch_id] folder. Using rf_verify_batch() show recipients rendering failed. Using targets::tar_meta(fields = \"error\") also tell targets failed corresponding error messages. Use render_single(recipient_id) render individual feedback item view detailed error message shown.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_dispatch_smtp.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispatch feedback via SMTP email — rf_dispatch_smtp","title":"Dispatch feedback via SMTP email — rf_dispatch_smtp","text":"Sends generated feedback files recipients using SMTP.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_dispatch_smtp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispatch feedback via SMTP email — rf_dispatch_smtp","text":"","code":"rf_dispatch_smtp(batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_dispatch_smtp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispatch feedback via SMTP email — rf_dispatch_smtp","text":"batch_id Character. Identifier batch.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_dispatch_smtp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispatch feedback via SMTP email — rf_dispatch_smtp","text":"Message indicating status.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_do_computations.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform computations on data — rf_do_computations","title":"Perform computations on data — rf_do_computations","text":"Runs user-defined computations raw data prior rendering.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_do_computations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform computations on data — rf_do_computations","text":"","code":"rf_do_computations(computation_script, records_data)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_do_computations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform computations on data — rf_do_computations","text":"computation_script Character. Path computation script records_data Data frame data","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_do_computations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform computations on data — rf_do_computations","text":"Computed data object.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load raw data — rf_get_data","title":"Load raw data — rf_get_data","text":"Loads updates data file specified config.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load raw data — rf_get_data","text":"","code":"rf_get_data()"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load raw data — rf_get_data","text":"Invisible","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_get_recipients.html","id":null,"dir":"Reference","previous_headings":"","what":"Load recipient data — rf_get_recipients","title":"Load recipient data — rf_get_recipients","text":"Loads updates recipients file specified config.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_get_recipients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load recipient data — rf_get_recipients","text":"","code":"rf_get_recipients()"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_get_recipients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load recipient data — rf_get_recipients","text":"Invisible","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise a recorder feedback project — rf_init","title":"Initialise a recorder feedback project — rf_init","text":"Sets directory structure template files new feedback project.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise a recorder feedback project — rf_init","text":"","code":"rf_init(path = \".\")"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise a recorder feedback project — rf_init","text":"path Character. Path create project.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialise a recorder feedback project — rf_init","text":"Invisible","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_look_for_computed_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Look in the R Markdown template and identify computed objects required in the code to render the template. — rf_look_for_computed_objects","title":"Look in the R Markdown template and identify computed objects required in the code to render the template. — rf_look_for_computed_objects","text":"function reads R Markdown template file identifies computed objects used code. specifically looks background computed objects (`params$bg_computed_objects$`) user computed objects (`params$user_computed_objects$`).","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_look_for_computed_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look in the R Markdown template and identify computed objects required in the code to render the template. — rf_look_for_computed_objects","text":"","code":"rf_look_for_computed_objects(file_path_to_template)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_look_for_computed_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look in the R Markdown template and identify computed objects required in the code to render the template. — rf_look_for_computed_objects","text":"file_path_to_template file path R Markdown template.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_look_for_computed_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look in the R Markdown template and identify computed objects required in the code to render the template. — rf_look_for_computed_objects","text":"list containing two elements: bg_computed_objects: character vector representing unique computed objects following \"params$bg_computed_objects$\". user_computed_objects: character vector representing unique computed objects following \"params$user_computed_objects$\".","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_make_meta_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create meta table for feedback batch — rf_make_meta_table","title":"Create meta table for feedback batch — rf_make_meta_table","text":"Generates summary table feedback files recipients, writes disk.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_make_meta_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create meta table for feedback batch — rf_make_meta_table","text":"","code":"rf_make_meta_table(x, batch_id, recipient_data)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_make_meta_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create meta table for feedback batch — rf_make_meta_table","text":"x list data frame feedback results summarize. batch_id Character. Identifier feedback batch. recipient_data Data frame. Recipient information join.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_make_meta_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create meta table for feedback batch — rf_make_meta_table","text":"Character. Path written meta table CSV file.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Render feedback content for all recipients — rf_render_all","title":"Render feedback content for all recipients — rf_render_all","text":"Generates personalized feedback documents recipient.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render feedback content for all recipients — rf_render_all","text":"","code":"rf_render_all(batch_id)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render feedback content for all recipients — rf_render_all","text":"batch_id Character. Identifier batch.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render feedback content for all recipients — rf_render_all","text":"Invisible","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Render feedback content for all recipients — rf_render_content","title":"Render feedback content for all recipients — rf_render_content","text":"Generates personalized feedback documents recipient.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render feedback content for all recipients — rf_render_content","text":"","code":"rf_render_content(   template_file,   recipient_params,   recipient_id,   batch_id,   email_format,   template_html )"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render feedback content for all recipients — rf_render_content","text":"template_file Character. RMarkdown file template recipient_params List. Parameters recipient recipient_id Character. Identifier batch. batch_id Character. Identifier batch. template_html Character. Template file template","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render feedback content for all recipients — rf_render_content","text":"Path rendered file.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Render feedback for a single recipient — rf_render_single","title":"Render feedback for a single recipient — rf_render_single","text":"Generates feedback one recipient using data.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render feedback for a single recipient — rf_render_single","text":"","code":"rf_render_single(recipient_id, view = F)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render feedback for a single recipient — rf_render_single","text":"recipient_id Integer character. ID recipient. view Logical. Whether show content viewer.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_render_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render feedback for a single recipient — rf_render_single","text":"Path rendered file.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify a render batch — rf_verify_batch","title":"Verify a render batch — rf_verify_batch","text":"Checks rendered items match recipient data meta table.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify a render batch — rf_verify_batch","text":"","code":"rf_verify_batch(batch_id, verbose = FALSE)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify a render batch — rf_verify_batch","text":"verbose Logical, TRUE prints summary info.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify a render batch — rf_verify_batch","text":"Invisible TRUE checks pass, otherwise stops warns.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify data and recipient files — rf_verify_data","title":"Verify data and recipient files — rf_verify_data","text":"Checks raw data file recipient file exist, readable, contain required columns, optionally prints summary info.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify data and recipient files — rf_verify_data","text":"","code":"rf_verify_data(verbose = FALSE)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify data and recipient files — rf_verify_data","text":"verbose Logical, TRUE prints number records recipients.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_verify_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify data and recipient files — rf_verify_data","text":"Invisible TRUE checks pass, otherwise stops error.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_view_content.html","id":null,"dir":"Reference","previous_headings":"","what":"View rendered feedback for a recipient — rf_view_content","title":"View rendered feedback for a recipient — rf_view_content","text":"Opens rendered HTML file specific recipient batch system's default browser.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_view_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View rendered feedback for a recipient — rf_view_content","text":"","code":"rf_view_content(batch_id, recipient_id = NULL)"},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_view_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View rendered feedback for a recipient — rf_view_content","text":"batch_id Character. feedback batch identifier. recipient_id Character numeric. recipient's ID.","code":""},{"path":"https://simonrolph.github.io/recorderFeedback/reference/rf_view_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View rendered feedback for a recipient — rf_view_content","text":"Invisible TRUE file opened successfully, otherwise stops error.","code":""}]
